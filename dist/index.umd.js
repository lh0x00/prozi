!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("to-fast-properties"),require("throat")):"function"==typeof define&&define.amd?define(["exports","to-fast-properties","throat"],r):r((e||self).quiz={},e.toFastProperties,e.throat)}(this,function(e,r,t){function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=/*#__PURE__*/n(r),c=/*#__PURE__*/n(t);function i(e){return o.default(e)}var u=/*#__PURE__*/function(){function e(){}return e.wrap=function(r){return function(){try{var t=this;return Promise.resolve(e.create(function(e,n){try{var o=arguments;try{e(Promise.resolve(r.apply(t,[].slice.call(o))))}catch(e){n(e)}return Promise.resolve()}catch(e){return Promise.reject(e)}}))}catch(e){return Promise.reject(e)}}},e.immediate=function(r){try{return Promise.resolve(e.create(function(e,t){Promise.resolve().then(function(){Promise.resolve("function"==typeof r?r():null).then(e).catch(t)})}))}catch(e){return Promise.reject(e)}},e.timeout=function(r,t){void 0===t&&(t=0);try{return Promise.resolve(e.create(function(e,n){setTimeout(function(){Promise.resolve("function"==typeof r?r():null).then(e).catch(n)},t)}))}catch(e){return Promise.reject(e)}},e.throat=function(r,t,n){try{if(!r||!Array.isArray(r)||!("map"in r))throw new Error("The parameter list received is invalid,it's must be a list or support `map` prototype.");var o=Object.assign({concurrency:this.defaults.concurrency,schedule:!1},n);if(o.concurrency<=0)throw new Error("Quiz throat required concurrency value is greater 0.");return Promise.resolve(e.map(r,t,o))}catch(e){return Promise.reject(e)}},e.map=function(r,t,n){try{if(!r||!Array.isArray(r)||!("map"in r))throw new Error("The parameter list received is invalid,it's must be a list or support `map` prototype.");var o=Object.assign({concurrency:-1,schedule:!1},n);return Promise.resolve(e.all(r.map(o.concurrency>0?c.default(o.concurrency,t):t)))}catch(e){return Promise.reject(e)}},e.from=function(e){try{var r=Object.keys(e),t=Object.values(e);return Promise.resolve(this.all(t)).then(function(e){return e.reduce(function(e,t,n){var o;return Object.assign(e,((o={})[r[n]]=t,o))},i())})}catch(e){return Promise.reject(e)}},e.all=function(){try{var e=[].slice.call(arguments).reduce(function(e,r){return e.concat(r)},[]);return Promise.all(e)}catch(e){return Promise.reject(e)}},e.defer=function(e){var r=Object.assign({timeout:-1,cancelable:!0},e),t=i({});return t.state="pending",t.is=i({finalled:function(){return"resolved"===t.state||"rejected"===t.state},resolved:function(){return"resolved"===t.state},rejected:function(){return"rejected"===t.state}}),t.promise=new Promise(function(e,n){if(t.resolve=e,t.reject=n,r.cancelable&&Promise.resolve().then(function(){t.cancel=t.promise.cancel=function(){var e=new Error("The promise have been canceled.");e.name="PromiseCanceled",t.reject(e)}}),r.timeout>0){var o=setTimeout(function(){o=-1;var e=new Error("The promise has been timedout.");e.name="PromiseTimedout",t.reject(e)},r.timeout);t.flush=function(){clearTimeout(o),o=-1},t.promise.finally(function(){t.flush()})}}),t.promise.then(function(){return t.state="resolved"}).catch(function(){return t.state="rejected"}),t},e.run=function(r,t){var n=e.defer(t);return r().then(n.resolve).catch(n.reject),n.promise},e.create=function(r,t){var n=e.defer(t);return r(n.resolve,n.reject),n.promise},e}();u.defaults=i({concurrency:4}),u.race=function(){try{var e=[].slice.call(arguments).reduce(function(e,r){return e.concat(r)},[]);return Promise.race(e)}catch(e){return Promise.reject(e)}},u.promisify=function(e){return function(){var r=arguments;try{return Promise.resolve(new Promise(function(t,n){e.apply(void 0,[].slice.call(r).concat([function(e,r){e?n(e):t(r)}]))}))}catch(e){return Promise.reject(e)}}},u.deferify=function(e){return function(){var r=u.defer();return r.forward=e.apply(void 0,[].slice.call(arguments).concat([function(e,t){return e?r.reject(e):r.resolve(t)}])),r}},Object.defineProperty(e,"throat",{enumerable:!0,get:function(){return c.default}}),e.Quiz=u,e.fastObjectProperties=i});
//# sourceMappingURL=index.umd.js.map
